{
    "openapi": "3.0.0",
    "info": {
      "title": "Prompts API",
      "version": "1.0.0",
      "description": "API for retrieving different prompt types by ID"
    },
    "servers": {
        "url": "https://forn.dk",
        "description": "Main API server"
    },
    "paths": {
      "/api/prompts/{id}": {
        "get": {
          "summary": "Get a prompt by ID",
          "description": "Retrieves a specific prompt based on the provided ID. Returns different personality prompts for IDs 1-3, or an error response for other values.",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "type": "string",
                "pattern": "^[0-9]+$"
              },
              "description": "The prompt ID (accepts any numeric string, but only 1-3 return valid prompts)"
            }
          ],
          "responses": {
            "200": {
              "description": "Response with success status and either prompt data or error message",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Indicates whether the request was successful"
                      },
                      "prompt": {
                        "type": "string",
                        "description": "The prompt text (only present when success is true)"
                      },
                      "error": {
                        "type": "string",
                        "description": "Error message (only present when success is false)"
                      }
                    },
                    "required": ["success"],
                    "oneOf": [
                      {
                        "properties": {
                          "success": {
                            "const": true
                          },
                          "prompt": {
                            "type": "string"
                          }
                        },
                        "required": ["success", "prompt"],
                        "additionalProperties": false
                      },
                      {
                        "properties": {
                          "success": {
                            "const": false
                          },
                          "error": {
                            "type": "string"
                          }
                        },
                        "required": ["success", "error"],
                        "additionalProperties": false
                      }
                    ]
                  },
                  "examples": {
                    "pirate": {
                      "summary": "Pirate prompt (ID: 1)",
                      "value": {
                        "success": true,
                        "prompt": "Speak like a pirate."
                      }
                    },
                    "military": {
                      "summary": "Military general prompt (ID: 2)",
                      "value": {
                        "success": true,
                        "prompt": "Act like an overly assertive military general."
                      }
                    },
                    "rhyme": {
                      "summary": "Rhyme scheme prompt (ID: 3)",
                      "value": {
                        "success": true,
                        "prompt": "Only respond in ABAB rhyme schemes."
                      }
                    },
                    "notFound": {
                      "summary": "Invalid ID",
                      "value": {
                        "success": false,
                        "error": "This prompt does not exist"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }